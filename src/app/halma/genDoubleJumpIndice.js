const stringToIndex = {
  '0,12': 0,
  '2,11': 1,
  '2,13': 2,
  '3,10': 3,
  '3,12': 4,
  '3,14': 5,
  '5,9': 6,
  '5,11': 7,
  '5,13': 8,
  '5,15': 9,
  '6,0': 10,
  '6,2': 11,
  '6,4': 12,
  '6,6': 13,
  '6,8': 14,
  '6,10': 15,
  '6,12': 16,
  '6,14': 17,
  '6,16': 18,
  '6,18': 19,
  '6,20': 20,
  '6,22': 21,
  '6,24': 22,
  '8,1': 23,
  '8,3': 24,
  '8,5': 25,
  '8,7': 26,
  '8,9': 27,
  '8,11': 28,
  '8,13': 29,
  '8,15': 30,
  '8,17': 31,
  '8,19': 32,
  '8,21': 33,
  '8,23': 34,
  '9,2': 35,
  '9,4': 36,
  '9,6': 37,
  '9,8': 38,
  '9,10': 39,
  '9,12': 40,
  '9,14': 41,
  '9,16': 42,
  '9,18': 43,
  '9,20': 44,
  '9,22': 45,
  '11,3': 46,
  '11,5': 47,
  '11,7': 48,
  '11,9': 49,
  '11,11': 50,
  '11,13': 51,
  '11,15': 52,
  '11,17': 53,
  '11,19': 54,
  '11,21': 55,
  '12,4': 56,
  '12,6': 57,
  '12,8': 58,
  '12,10': 59,
  '12,12': 60,
  '12,14': 61,
  '12,16': 62,
  '12,18': 63,
  '12,20': 64,
  '14,3': 65,
  '14,5': 66,
  '14,7': 67,
  '14,9': 68,
  '14,11': 69,
  '14,13': 70,
  '14,15': 71,
  '14,17': 72,
  '14,19': 73,
  '14,21': 74,
  '15,2': 75,
  '15,4': 76,
  '15,6': 77,
  '15,8': 78,
  '15,10': 79,
  '15,12': 80,
  '15,14': 81,
  '15,16': 82,
  '15,18': 83,
  '15,20': 84,
  '15,22': 85,
  '17,1': 86,
  '17,3': 87,
  '17,5': 88,
  '17,7': 89,
  '17,9': 90,
  '17,11': 91,
  '17,13': 92,
  '17,15': 93,
  '17,17': 94,
  '17,19': 95,
  '17,21': 96,
  '17,23': 97,
  '18,0': 98,
  '18,2': 99,
  '18,4': 100,
  '18,6': 101,
  '18,8': 102,
  '18,10': 103,
  '18,12': 104,
  '18,14': 105,
  '18,16': 106,
  '18,18': 107,
  '18,20': 108,
  '18,22': 109,
  '18,24': 110,
  '20,9': 111,
  '20,11': 112,
  '20,13': 113,
  '20,15': 114,
  '21,10': 115,
  '21,12': 116,
  '21,14': 117,
  '23,11': 118,
  '23,13': 119,
  '24,12': 120,
};

 const indexToString = {
  0: '0,12',
  1: '2,11',
  2: '2,13',
  3: '3,10',
  4: '3,12',
  5: '3,14',
  6: '5,9',
  7: '5,11',
  8: '5,13',
  9: '5,15',
  10: '6,0',
  11: '6,2',
  12: '6,4',
  13: '6,6',
  14: '6,8',
  15: '6,10',
  16: '6,12',
  17: '6,14',
  18: '6,16',
  19: '6,18',
  20: '6,20',
  21: '6,22',
  22: '6,24',
  23: '8,1',
  24: '8,3',
  25: '8,5',
  26: '8,7',
  27: '8,9',
  28: '8,11',
  29: '8,13',
  30: '8,15',
  31: '8,17',
  32: '8,19',
  33: '8,21',
  34: '8,23',
  35: '9,2',
  36: '9,4',
  37: '9,6',
  38: '9,8',
  39: '9,10',
  40: '9,12',
  41: '9,14',
  42: '9,16',
  43: '9,18',
  44: '9,20',
  45: '9,22',
  46: '11,3',
  47: '11,5',
  48: '11,7',
  49: '11,9',
  50: '11,11',
  51: '11,13',
  52: '11,15',
  53: '11,17',
  54: '11,19',
  55: '11,21',
  56: '12,4',
  57: '12,6',
  58: '12,8',
  59: '12,10',
  60: '12,12',
  61: '12,14',
  62: '12,16',
  63: '12,18',
  64: '12,20',
  65: '14,3',
  66: '14,5',
  67: '14,7',
  68: '14,9',
  69: '14,11',
  70: '14,13',
  71: '14,15',
  72: '14,17',
  73: '14,19',
  74: '14,21',
  75: '15,2',
  76: '15,4',
  77: '15,6',
  78: '15,8',
  79: '15,10',
  80: '15,12',
  81: '15,14',
  82: '15,16',
  83: '15,18',
  84: '15,20',
  85: '15,22',
  86: '17,1',
  87: '17,3',
  88: '17,5',
  89: '17,7',
  90: '17,9',
  91: '17,11',
  92: '17,13',
  93: '17,15',
  94: '17,17',
  95: '17,19',
  96: '17,21',
  97: '17,23',
  98: '18,0',
  99: '18,2',
  100: '18,4',
  101: '18,6',
  102: '18,8',
  103: '18,10',
  104: '18,12',
  105: '18,14',
  106: '18,16',
  107: '18,18',
  108: '18,20',
  109: '18,22',
  110: '18,24',
  111: '20,9',
  112: '20,11',
  113: '20,13',
  114: '20,15',
  115: '21,10',
  116: '21,12',
  117: '21,14',
  118: '23,11',
  119: '23,13',
  120: '24,12',
};

/**
 * 1. loop over all indice (0 => 120)
 *
 */

/**
 *  for (const neighborIndex of [
        [rowIndex - 1, columnIndex + 1],
        [rowIndex + 0, columnIndex - 2],
        [rowIndex - 1, columnIndex - 1],
        [rowIndex + 1, columnIndex + 1],
        [rowIndex + 0, columnIndex + 2],
        [rowIndex + 1, columnIndex - 1],
      ])
 */

/**
 * goal: find all possible double jumps
 */

/**
 * neighbors = [[-1, 1], [0, -2], [-1, -1], [1, 1], [0, 2], [1, -1]]
 * jumpDestinations = [[-2, 2], [0, -4], [-2, -2], [2, 2], [0, 4], [2, -2]]
 * ATTENTION: Both must exist in the board
 */

let jumpTargetLocations = {};

const neighbors = [
  [-1, 1],
  [0, -2],
  [-1, -1],
  [1, 1],
  [0, 2],
  [1, -1],
];
const jumpDestinations = [
  [-2, 2],
  [0, -4],
  [-2, -2],
  [2, 2],
  [0, 4],
  [2, -2],
];

//loop over all indice
for (let i = 0; i < 121; i++) {
  jumpTargetLocations[i] = [];
  const currentMarbleStringLocation = indexToString[i];

  const [rowIndex, columnIndex] = currentMarbleStringLocation
    .split(",")
    .map(Number);

  for (const [index, value] of jumpDestinations.entries()) {
    const newX = rowIndex + value[0];
    const newY = columnIndex + value[1];
    const newTargetLocationString = newX + "," + newY; //STRING

    if (stringToIndex[newTargetLocationString]) {
      jumpTargetLocations[i].push({
        newTargetLocationString: stringToIndex[newTargetLocationString],
        newNeighbor:
          stringToIndex[
            rowIndex +
              neighbors[index][0] +
              "," +
              (columnIndex + neighbors[index][1])
          ],
      });
    }
  }
}

console.log(jumpTargetLocations);
